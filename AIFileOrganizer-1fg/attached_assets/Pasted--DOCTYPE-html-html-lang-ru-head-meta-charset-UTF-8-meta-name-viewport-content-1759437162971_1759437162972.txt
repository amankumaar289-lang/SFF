<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SPACE-–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: –¶–∏—Ñ—Ä–æ–≤–∞—è –£—á—ë—Ç–Ω–∞—è –ü–æ–ª–∏—Ç–∏–∫–∞</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700;800&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Montserrat', sans-serif;
            background: linear-gradient(135deg, rgba(255,0,83,0.05) 0%, rgba(138,131,209,0.05) 100%);
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 40px 20px;
        }

        .page {
            display: none;
        }

        .page.active {
            display: block;
            animation: fadeIn 0.3s ease-in;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        h1 {
            font-size: 48px;
            font-weight: 800;
            background: linear-gradient(135deg, #FF0053 0%, #8A83D1 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-align: center;
            margin-bottom: 20px;
        }

        h2 {
            font-size: 36px;
            font-weight: 700;
            color: #1f2937;
            margin-bottom: 20px;
        }

        .subtitle {
            font-size: 24px;
            color: #6b7280;
            text-align: center;
            margin-bottom: 40px;
        }

        .team-name {
            text-align: center;
            font-size: 18px;
            color: #8A83D1;
            font-weight: 600;
            margin-top: 20px;
        }

        .btn {
            background: linear-gradient(135deg, #FF0053 0%, #8A83D1 100%);
            color: white;
            border: none;
            padding: 16px 32px;
            font-size: 18px;
            font-weight: 600;
            border-radius: 30px;
            cursor: pointer;
            font-family: 'Montserrat', sans-serif;
            transition: all 0.3s;
            display: inline-block;
            text-decoration: none;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(255,0,83,0.3);
        }

        .btn-secondary {
            background: white;
            color: #FF0053;
            border: 2px solid #FF0053;
        }

        .btn-secondary:hover {
            background: #FF0053;
            color: white;
        }

        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
            margin: 60px 0;
        }

        .feature-card {
            background: white;
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
            text-align: center;
            transition: transform 0.3s;
        }

        .feature-card:hover {
            transform: translateY(-10px);
        }

        .feature-icon {
            font-size: 48px;
            margin-bottom: 20px;
        }

        .feature-card h3 {
            font-size: 24px;
            color: #FF0053;
            margin-bottom: 15px;
        }

        .feature-card p {
            color: #6b7280;
            line-height: 1.6;
        }

        .wizard-container {
            max-width: 800px;
            margin: 0 auto;
        }

        .progress-bar {
            width: 100%;
            height: 8px;
            background: #e5e7eb;
            border-radius: 10px;
            margin-bottom: 40px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(135deg, #FF0053 0%, #8A83D1 100%);
            transition: width 0.3s ease;
        }

        .step-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .step-counter {
            color: #6b7280;
            font-size: 16px;
        }

        .card {
            background: white;
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-label {
            display: block;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 10px;
            font-size: 16px;
        }

        .form-input {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            font-size: 16px;
            font-family: 'Montserrat', sans-serif;
            transition: border-color 0.3s;
        }

        .form-input:focus {
            outline: none;
            border-color: #FF0053;
        }

        .radio-group {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .radio-option {
            display: flex;
            align-items: center;
            padding: 15px;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .radio-option:hover {
            border-color: #8A83D1;
            background: rgba(138,131,209,0.05);
        }

        .radio-option input[type="radio"] {
            width: 20px;
            height: 20px;
            margin-right: 15px;
            cursor: pointer;
        }

        .radio-option.selected {
            border-color: #FF0053;
            background: rgba(255,0,83,0.05);
        }

        .button-group {
            display: flex;
            justify-content: space-between;
            margin-top: 30px;
        }

        .result-card {
            text-align: center;
            padding: 60px 40px;
        }

        .result-icon {
            font-size: 80px;
            margin-bottom: 30px;
        }

        .spinner {
            border: 4px solid #e5e7eb;
            border-top: 4px solid #8A83D1;
            border-radius: 50%;
            width: 60px;
            height: 60px;
            animation: spin 1s linear infinite;
            margin: 0 auto 30px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .next-steps {
            background: #f9fafb;
            padding: 20px;
            border-radius: 10px;
            margin-top: 30px;
            text-align: left;
        }

        .next-steps h3 {
            font-size: 18px;
            color: #1f2937;
            margin-bottom: 15px;
        }

        .next-steps ul {
            list-style: none;
        }

        .next-steps li {
            color: #6b7280;
            margin: 10px 0;
            padding-left: 25px;
            position: relative;
        }

        .next-steps li::before {
            content: "‚úì";
            position: absolute;
            left: 0;
            color: #10b981;
            font-weight: bold;
        }

        .error-message {
            background: #fee;
            color: #c00;
            padding: 12px 16px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: none;
        }

        .error-message.show {
            display: block;
        }

        .center-content {
            text-align: center;
        }

        @media (max-width: 768px) {
            h1 { font-size: 32px; }
            h2 { font-size: 24px; }
            .features { grid-template-columns: 1fr; }
        }
    </style>
</head>
<body>
    <!-- HOME PAGE -->
    <div id="home" class="page active">
        <div class="container">
            <h1>SPACE-–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä</h1>
            <p class="subtitle">–¶–∏—Ñ—Ä–æ–≤–∞—è –£—á—ë—Ç–Ω–∞—è –ü–æ–ª–∏—Ç–∏–∫–∞</p>
            
            <p style="text-align: center; max-width: 800px; margin: 0 auto 60px; color: #6b7280; font-size: 18px;">
                –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —É—á–µ—Ç–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è –æ—Ä–≥–∞–Ω–æ–≤ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –≤–ª–∞—Å—Ç–∏ 
                –∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π –≥–æ—Ä–æ–¥–∞ –ú–æ—Å–∫–≤—ã
            </p>

            <div class="features">
                <div class="feature-card">
                    <div class="feature-icon">‚ö°</div>
                    <h3>–ë—ã—Å—Ç—Ä–æ</h3>
                    <p>–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–º–µ—Å—Ç–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –¥–Ω–µ–π</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">‚úì</div>
                    <h3>–¢–æ—á–Ω–æ</h3>
                    <p>–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤—Å–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —É—á–µ—Ç–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">üéØ</div>
                    <h3>–ü—Ä–æ—Å—Ç–æ</h3>
                    <p>–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–æ–ø—Ä–æ—Å–Ω–∏–∫ –ø—Ä–æ–≤–µ–¥–µ—Ç –≤–∞—Å —á–µ—Ä–µ–∑ –≤—Å–µ —ç—Ç–∞–ø—ã</p>
                </div>
            </div>

            <div class="center-content">
                <button class="btn" onclick="goToWizard()">–ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —É—á–µ—Ç–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏</button>
                <p class="team-name">–ö–æ–º–∞–Ω–¥–∞ SPACE: –ù–∏–∫–∏—Ç–∞ –ú—É—Å–∏–µ–Ω–∫–æ, –ö–æ–Ω–¥—Ä–∞—Ç—å–µ–≤ –ó–∞—Ö–∞—Ä</p>
            </div>
        </div>
    </div>

    <!-- WIZARD PAGE -->
    <div id="wizard" class="page">
        <div class="container wizard-container">
            <div class="step-info">
                <h2 id="wizard-title">–ú–∞—Å—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è —É—á–µ—Ç–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏</h2>
                <span class="step-counter" id="step-counter">–®–∞–≥ 1 –∏–∑ 6</span>
            </div>
            
            <div class="progress-bar">
                <div class="progress-fill" id="progress-fill" style="width: 16.67%"></div>
            </div>

            <div class="card">
                <div class="error-message" id="error-message"></div>
                
                <div id="step-content"></div>

                <div class="button-group">
                    <button class="btn btn-secondary" onclick="previousStep()">‚Üê –ù–∞–∑–∞–¥</button>
                    <button class="btn" onclick="nextStep()">–î–∞–ª–µ–µ ‚Üí</button>
                </div>
            </div>
        </div>
    </div>

    <!-- RESULT PAGE -->
    <div id="result" class="page">
        <div class="container wizard-container">
            <div class="card result-card">
                <div id="processing-state">
                    <div class="spinner"></div>
                    <h2>–§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —É—á–µ—Ç–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞...</h2>
                    <p style="color: #6b7280; margin-top: 20px;">
                        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç.
                    </p>
                </div>

                <div id="ready-state" style="display: none;">
                    <div class="result-icon">‚úì</div>
                    <h2>–£—á–µ—Ç–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ –≥–æ—Ç–æ–≤–∞!</h2>
                    <p style="color: #6b7280; margin: 20px 0 30px;">
                        –í–∞—à –¥–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∑–∞–≥—Ä—É–∑–∫–µ
                    </p>
                    
                    <button class="btn" onclick="downloadDocument()">üìÑ –°–∫–∞—á–∞—Ç—å PDF</button>

                    <div class="next-steps">
                        <h3>–ß—Ç–æ –¥–∞–ª—å—à–µ?</h3>
                        <ul>
                            <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞</li>
                            <li>–ü–æ–¥–ø–∏—à–∏—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é</li>
                            <li>–ù–∞–ø—Ä–∞–≤—å—Ç–µ –≤ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—é</li>
                        </ul>
                    </div>

                    <button class="btn btn-secondary" onclick="goToHome()" style="margin-top: 30px;">üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é</button>
                </div>
            </div>
            
            <p class="team-name">–ö–æ–º–∞–Ω–¥–∞ SPACE: –ù–∏–∫–∏—Ç–∞ –ú—É—Å–∏–µ–Ω–∫–æ, –ö–æ–Ω–¥—Ä–∞—Ç—å–µ–≤ –ó–∞—Ö–∞—Ä</p>
        </div>
    </div>

    <script>
        // ====== STATE MANAGEMENT ======
        const state = {
            currentStep: 0,
            sessionId: null,
            answers: {
                orgName: '',
                taxSystem: '',
                accountingType: '',
                industry: '',
                osAccounting: '',
                mpzAccounting: ''
            }
        };

        // ====== WIZARD STEPS CONFIGURATION ======
        const steps = [
            {
                id: 'start',
                title: '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã',
                description: '–£–∫–∞–∂–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
                fields: [
                    {
                        type: 'text',
                        name: 'orgName',
                        label: '–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
                        placeholder: '–ù–∞–ø—Ä–∏–º–µ—Ä: –ì–ë–£ –®–∫–æ–ª–∞ –∑–¥–æ—Ä–æ–≤—å—è'
                    },
                    {
                        type: 'radio',
                        name: 'taxSystem',
                        label: '–°–∏—Å—Ç–µ–º–∞ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è',
                        options: [
                            { value: 'USN', label: '–£–°–ù (–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è)' },
                            { value: 'OSN', label: '–û–°–ù (–û–±—â–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è)' },
                            { value: 'ESHN', label: '–ï–°–•–ù (–ï–¥–∏–Ω—ã–π —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–∞–ª–æ–≥)' }
                        ]
                    }
                ]
            },
            {
                id: 'accounting-type',
                title: '–¢–∏–ø —É—á–µ—Ç–∞',
                description: '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–µ–¥–µ–Ω–∏—è —É—á–µ—Ç–∞',
                fields: [
                    {
                        type: 'radio',
                        name: 'accountingType',
                        label: '–¢–∏–ø —É—á–µ—Ç–∞',
                        options: [
                            { value: 'budget', label: '–ë—é–¥–∂–µ—Ç–Ω—ã–π —É—á–µ—Ç' },
                            { value: 'accounting', label: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–π —É—á–µ—Ç' }
                        ]
                    }
                ]
            },
            {
                id: 'industry',
                title: '–û—Ç—Ä–∞—Å–ª–µ–≤–∞—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å',
                description: '–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—Ä–∞—Å–ª—å –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
                fields: [
                    {
                        type: 'radio',
                        name: 'industry',
                        label: '–û—Ç—Ä–∞—Å–ª—å',
                        options: [
                            { value: 'environment', label: '–û–∫—Ä—É–∂–∞—é—â–∞—è —Å—Ä–µ–¥–∞' },
                            { value: 'housing', label: '–ñ–∏–ª–∏—â–Ω–æ-–∫–æ–º–º—É–Ω–∞–ª—å–Ω–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ' },
                            { value: 'education', label: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ' },
                            { value: 'transport', label: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç' },
                            { value: 'road', label: '–î–æ—Ä–æ–∂–Ω–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ' },
                            { value: 'none', label: '–ë–µ–∑ –æ—Ç—Ä–∞—Å–ª–µ–≤—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π' }
                        ]
                    }
                ]
            },
            {
                id: 'os-accounting',
                title: '–£—á–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤',
                description: '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∞–º–æ—Ä—Ç–∏–∑–∞—Ü–∏–∏',
                fields: [
                    {
                        type: 'radio',
                        name: 'osAccounting',
                        label: '–ú–µ—Ç–æ–¥ –∞–º–æ—Ä—Ç–∏–∑–∞—Ü–∏–∏',
                        options: [
                            { value: 'linear', label: '–õ–∏–Ω–µ–π–Ω—ã–π –º–µ—Ç–æ–¥' },
                            { value: 'reducing-balance', label: '–ú–µ—Ç–æ–¥ —É–º–µ–Ω—å—à–∞–µ–º–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∞' }
                        ]
                    }
                ]
            },
            {
                id: 'mpz-accounting',
                title: '–£—á–µ—Ç –ú–ü–ó',
                description: '–ú–µ—Ç–æ–¥ –æ—Ü–µ–Ω–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ-–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø–∞—Å–æ–≤',
                fields: [
                    {
                        type: 'radio',
                        name: 'mpzAccounting',
                        label: '–ú–µ—Ç–æ–¥ –æ—Ü–µ–Ω–∫–∏ –ú–ü–ó',
                        options: [
                            { value: 'fifo', label: '–§–ò–§–û (–ü–µ—Ä–≤—ã–º –ø—Ä–∏—à–µ–ª - –ø–µ—Ä–≤—ã–º —É—à–µ–ª)' },
                            { value: 'average', label: '–ü–æ —Å—Ä–µ–¥–Ω–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏' }
                        ]
                    }
                ]
            },
            {
                id: 'review',
                title: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö',
                description: '–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',
                fields: []
            }
        ];

        // ====== BACKEND SIMULATION (–∏–º–∏—Ç–∞—Ü–∏—è 1–°) ======
        class MockBackend {
            constructor() {
                this.sessions = new Map();
                this.processingQueue = new Map();
            }

            // –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ (–∏–º–∏—Ç–∞—Ü–∏—è POST /api/wizard/start)
            createSession(orgName, taxSystem) {
                const sessionId = `session-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
                const session = {
                    sessionId,
                    orgName,
                    taxSystem,
                    createdAt: new Date().toISOString(),
                    status: 'active',
                    steps: []
                };
                
                this.sessions.set(sessionId, session);
                console.log('[1–° Backend] –°–æ–∑–¥–∞–Ω–∞ —Å–µ—Å—Å–∏—è:', sessionId);
                return { sessionId };
            }

            // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —à–∞–≥–∞ (–∏–º–∏—Ç–∞—Ü–∏—è POST /api/wizard/step)
            saveStep(sessionId, step, answer) {
                const session = this.sessions.get(sessionId);
                if (!session) {
                    throw new Error('Session not found');
                }

                session.steps.push({ step, answer, timestamp: new Date().toISOString() });
                console.log('[1–° Backend] –°–æ—Ö—Ä–∞–Ω–µ–Ω —à–∞–≥:', step, '=', answer);
                
                return { status: 'ok' };
            }

            // –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–∏–º–∏—Ç–∞—Ü–∏—è POST /api/wizard/finish)
            startGeneration(sessionId) {
                const session = this.sessions.get(sessionId);
                if (!session) {
                    throw new Error('Session not found');
                }

                session.status = 'processing';
                console.log('[1–° Backend] –ó–∞–ø—É—â–µ–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è —Å–µ—Å—Å–∏–∏:', sessionId);

                // –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ 1–° (2 —Å–µ–∫—É–Ω–¥—ã)
                setTimeout(() => {
                    this.completeGeneration(sessionId);
                }, 2000);

                return { status: 'processing' };
            }

            // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            completeGeneration(sessionId) {
                const session = this.sessions.get(sessionId);
                if (session) {
                    session.status = 'ready';
                    session.documentUrl = `/documents/policy-${sessionId}.pdf`;
                    session.completedAt = new Date().toISOString();
                    console.log('[1–° Backend] –î–æ–∫—É–º–µ–Ω—Ç –≥–æ—Ç–æ–≤:', session.documentUrl);
                }
            }

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ (–∏–º–∏—Ç–∞—Ü–∏—è GET /api/result/{sessionId})
            getStatus(sessionId) {
                const session = this.sessions.get(sessionId);
                if (!session) {
                    throw new Error('Session not found');
                }

                if (session.status === 'ready') {
                    return {
                        status: 'ready',
                        downloadUrl: session.documentUrl
                    };
                }

                return { status: 'processing' };
            }

            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF (–∏–º–∏—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ 1–°)
            generatePDF(sessionId) {
                const session = this.sessions.get(sessionId);
                if (!session) return;

                console.log('[1–° Backend] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF-—Ñ–æ—Ä–º—É–ª—è—Ä–∞...');
                console.log('–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:', session.orgName);
                console.log('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:', session.steps);
                
                // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã –≤—ã–∑–æ–≤ –ø—Ä–æ—Ü–µ–¥—É—Ä 1–° –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è PDF
                return true;
            }
        }

        const backend = new MockBackend();

        // ====== NAVIGATION ======
        function showPage(pageId) {
            document.querySelectorAll('.page').forEach(p => p.classList.remove('active'));
            document.getElementById(pageId).classList.add('active');
        }

        function goToHome() {
            showPage('home');
            resetWizard();
        }

        function goToWizard() {
            showPage('wizard');
            renderStep();
        }

        function goToResult() {
            showPage('result');
            
            // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –≤ backend
            if (!state.sessionId) {
                const response = backend.createSession(state.answers.orgName, state.answers.taxSystem);
                state.sessionId = response.sessionId;
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –æ—Ç–≤–µ—Ç—ã
            Object.keys(state.answers).forEach(key => {
                if (state.answers[key]) {
                    backend.saveStep(state.sessionId, key, state.answers[key]);
                }
            });

            // –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
            backend.startGeneration(state.sessionId);

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
            document.getElementById('processing-state').style.display = 'block';
            document.getElementById('ready-state').style.display = 'none';

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            checkStatus();
        }

        function checkStatus() {
            if (!state.sessionId) return;

            const status = backend.getStatus(state.sessionId);
            
            if (status.status === 'ready') {
                document.getElementById('processing-state').style.display = 'none';
                document.getElementById('ready-state').style.display = 'block';
            } else {
                setTimeout(checkStatus, 500);
            }
        }

        function downloadDocument() {
            // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã download PDF
            alert('üìÑ –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Å–∫–∞—á–∞–Ω PDF-–¥–æ–∫—É–º–µ–Ω—Ç —Å —É—á–µ—Ç–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–æ–π, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π 1–°.\n\n–î–æ–∫—É–º–µ–Ω—Ç –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å:\n- –í—Å–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n- –û—Ç—Ä–∞—Å–ª–µ–≤—ã–µ –±–ª–æ–∫–∏\n- –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ–¥–ø–∏—Å—å\n\n–°–µ—Å—Å–∏—è: ' + state.sessionId);
        }

        // ====== WIZARD LOGIC ======
        function renderStep() {
            const step = steps[state.currentStep];
            const stepContent = document.getElementById('step-content');
            
            document.getElementById('step-counter').textContent = `–®–∞–≥ ${state.currentStep + 1} –∏–∑ ${steps.length}`;
            document.getElementById('progress-fill').style.width = `${((state.currentStep + 1) / steps.length) * 100}%`;

            if (step.id === 'review') {
                renderReviewStep();
                return;
            }

            let html = `<h3 style="font-size: 24px; color: #1f2937; margin-bottom: 10px;">${step.title}</h3>`;
            html += `<p style="color: #6b7280; margin-bottom: 30px;">${step.description}</p>`;

            step.fields.forEach(field => {
                html += `<div class="form-group">`;
                html += `<label class="form-label">${field.label}</label>`;

                if (field.type === 'text') {
                    html += `<input type="text" class="form-input" id="${field.name}" 
                             value="${state.answers[field.name] || ''}" 
                             placeholder="${field.placeholder}"
                             onchange="updateAnswer('${field.name}', this.value)">`;
                } else if (field.type === 'radio') {
                    html += `<div class="radio-group">`;
                    field.options.forEach(option => {
                        const checked = state.answers[field.name] === option.value ? 'checked' : '';
                        const selectedClass = checked ? 'selected' : '';
                        html += `
                            <label class="radio-option ${selectedClass}" onclick="selectRadio('${field.name}', '${option.value}')">
                                <input type="radio" name="${field.name}" value="${option.value}" ${checked}>
                                <span>${option.label}</span>
                            </label>
                        `;
                    });
                    html += `</div>`;
                }

                html += `</div>`;
            });

            stepContent.innerHTML = html;
        }

        function renderReviewStep() {
            const stepContent = document.getElementById('step-content');
            
            const labels = {
                orgName: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è',
                taxSystem: '–°–∏—Å—Ç–µ–º–∞ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è',
                accountingType: '–¢–∏–ø —É—á–µ—Ç–∞',
                industry: '–û—Ç—Ä–∞—Å–ª—å',
                osAccounting: '–ê–º–æ—Ä—Ç–∏–∑–∞—Ü–∏—è –û–°',
                mpzAccounting: '–û—Ü–µ–Ω–∫–∞ –ú–ü–ó'
            };

            let html = `<h3 style="font-size: 24px; color: #1f2937; margin-bottom: 10px;">–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö</h3>`;
            html += `<p style="color: #6b7280; margin-bottom: 30px;">–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ</p>`;
            
            html += `<div style="background: #f9fafb; padding: 20px; border-radius: 10px;">`;
            
            Object.keys(state.answers).forEach(key => {
                if (state.answers[key]) {
                    html += `<div style="margin-bottom: 15px; padding-bottom: 15px; border-bottom: 1px solid #e5e7eb;">`;
                    html += `<strong style="color: #6b7280;">${labels[key]}:</strong><br>`;
                    html += `<span style="color: #1f2937; font-size: 18px;">${state.answers[key]}</span>`;
                    html += `</div>`;
                }
            });
            
            html += `</div>`;
            
            stepContent.innerHTML = html;
        }

        function updateAnswer(field, value) {
            state.answers[field] = value;
        }

        function selectRadio(field, value) {
            state.answers[field] = value;
            renderStep();
        }

        function validateStep() {
            const step = steps[state.currentStep];
            const errorMsg = document.getElementById('error-message');
            
            for (let field of step.fields) {
                if (!state.answers[field.name]) {
                    errorMsg.textContent = `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–µ: ${field.label}`;
                    errorMsg.classList.add('show');
                    return false;
                }
            }
            
            errorMsg.classList.remove('show');
            return true;
        }

        function nextStep() {
            if (!validateStep()) return;

            if (state.currentStep < steps.length - 1) {
                state.currentStep++;
                renderStep();
            } else {
                goToResult();
            }
        }

        function previousStep() {
            if (state.currentStep > 0) {
                state.currentStep--;
                renderStep();
            } else {
                goToHome();
            }
        }

        function resetWizard() {
            state.currentStep = 0;
            state.sessionId = null;
            state.answers = {
                orgName: '',
                taxSystem: '',
                accountingType: '',
                industry: '',
                osAccounting: '',
                mpzAccounting: ''
            };
        }

        // ====== INITIALIZATION ======
        console.log('SPACE-–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: –¶–∏—Ñ—Ä–æ–≤–∞—è –£—á—ë—Ç–Ω–∞—è –ü–æ–ª–∏—Ç–∏–∫–∞');
        console.log('–ö–æ–º–∞–Ω–¥–∞ SPACE: –ù–∏–∫–∏—Ç–∞ –ú—É—Å–∏–µ–Ω–∫–æ, –ö–æ–Ω–¥—Ä–∞—Ç—å–µ–≤ –ó–∞—Ö–∞—Ä');
        console.log('Backend simulation –∞–∫—Ç–∏–≤–µ–Ω. –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ.');
    </script>
</body>
</html>
